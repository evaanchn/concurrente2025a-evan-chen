// Pseudocode for all procedures related to simulate()
procedure simulate(file_name, thread_count)
  const job = init_job(file_name)
  set_job(job)

  process_plates(job)

  report_results(plates)
  destroy_job(job)
end procedure

procedure process_plates(job)
  for plate_number := 0 to plate_count do
    mutable k_states := 0
    mutable reached_equilibrium := false
    const curr_plate = job->plates[plate_number]
    mutable plate_matrix := set_plate_matrix(curr_plate)

    equilibrate_plate(job, plate_number)

    clean_plate(job, plate_number)
  end for
end procedure

procedure equilibrate_plate(job, plate_number)
  declare curr_plate := job->plates[plate_number]
  while not reached_equilibrium do
    update_plate(plate_matrix)
    k_states := k_states + 1
  end while

  curr_plate->k_states = k_states
  update_plate_file(curr_plate)
end procedure

procedure clean_plate(job, plate_number)
  declare curr_plate := job->plates[plate_number]
  update_plate_file(curr_plate, job->source_directory)
  destroy_plate_matrix(curr_plate->plate_matrix)
end procedure